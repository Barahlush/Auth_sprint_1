openapi: 3.0.0
info:
  title: Flask Auth API
  version: "1.0"
servers:
  - url: http://localhost:5000/
    description: Local development server
paths:
  /auth/login:
    get:
      description: Get the login page
      responses:
        "200":
          description: OK
          content:
            text/html:
              schema:
                type: string
    post:
      description: Authenticate a user
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email of the user
                password:
                  type: string
                  description: The password of the user
                remember:
                  type: boolean
                  description: Whether to remember the user's session or not
              required:
                - email
                - password
      responses:
        "302":
          description: Redirect
          headers:
            Set-Cookie:
              schema:
                type: string
                description: Set a cookie to store the user's access token
        "401":
          description: Unauthorized
          content:
            text/html:
              schema:
                type: string
        "500":
          description: Internal Server Error
          content:
            text/html:
              schema:
                type: string
  /auth/logout:
    post:
      description: Log out a user
      security:
        - cookieAuth: []
      responses:
        "302":
          description: Redirect
          headers:
            Set-Cookie:
              schema:
                type: string
                description: Clear the user's access and refresh tokens
        "405":
          description: Method Not Allowed
          content:
            text/html:
              schema:
                type: string

  /auth/logout_all:
    post:
      description: Log out all of a user's sessions
      security:
        - cookieAuth: []
      responses:
        "302":
          description: Redirect
          headers:
            Set-Cookie:
              schema:
                type: string
                description: Clear all of the user's access and refresh tokens
            Location:
              schema:
                type: string
                description: Redirect to the login page
        "405":
          description: Method Not Allowed
          content:
            text/html:
              schema:
                type: string
  /auth/register:
    get:
      description: Get the registration page
      responses:
        "200":
          description: OK
          content:
            text/html:
              schema:
                type: string
    post:
      description: Register a new user
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the user
                email:
                  type: string
                  description: The email of the user
                password:
                  type: string
                  description: The password of the user
              required:
                - name
                - email
                - password
      responses:
        "302":
          description: Redirect
        "401":
          description: Unauthorized
          content:
            text/html:
              schema:
                type: string
        "500":
          description: Internal Server Error
          content:
            text/html:
              schema:
                type: string
  /auth/history:
    get:
      description: Get the login history for the current user
      security:
        - cookieAuth: []
      responses:
        "200":
          description: OK
          content:
            text/html:
              schema:
                type: string
        "302":
          description: Redirect
          headers:
            Location:
              schema:
                type: string
                description: Redirect to the login page
        "500":
          description: Internal Server Error
          content:
            text/html:
              schema:
                type: string
  /auth/:
    get:
      description: Get the home page of the auth service
      security:
        - cookieAuth: []
      responses:
        "200":
          description: OK
          content:
            text/html:
              schema:
                type: string
        "302":
          description: Redirect
          headers:
            Location:
              schema:
                type: string
                description: Redirect to the login page
        "500":
          description: Internal Server Error
          content:
            text/html:
              schema:
                type: string
  /auth/refresh:
    post:
      description: Refresh the user's access token
      security:
        - cookieAuth: []
      responses:
        "302":
          description: Redirect
          headers:
            Set-Cookie:
              schema:
                type: string
                description: Set a cookie to store the user's access token
            Location:
              schema:
                type: string
                description: Redirect to the home page
        "302":
          description: Redirect
          headers:
            Location:
              schema:
                type: string
                description: Redirect to the login page
        "405":
          description: Method Not Allowed
          content:
            text/html:
              schema:
                type: string
        "500":
          description: Internal Server Error
          content:
            text/html:
              schema:
                type: string

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: access_token_cookie

